{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/dell/Desktop/strip/stripe-intigration/src/app/server/models/PaymetProduct.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst PaymetProductSchema = new mongoose.Schema(\n  {\n    title: String,\n    price: Number,\n    paymentIntentId: String,\n  },\n  { timestamps: true }\n);\n\nexport default mongoose.models.PaymetProduct ||\n  mongoose.model(\"PaymetProduct\", PaymetProductSchema);\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,sBAAsB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAC7C;IACE,OAAO;IACP,OAAO;IACP,iBAAiB;AACnB,GACA;IAAE,YAAY;AAAK;uCAGN,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,aAAa,IAC1C,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,iBAAiB"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///home/dell/Desktop/strip/stripe-intigration/src/app/server/mongoConnection.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst MONGODB_URI = process.env.DATABASE_URL;\n\nif (!MONGODB_URI) {\n  throw new Error(\"Please define the DATABASE_URL environment variable.\");\n}\n\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function dbConnect() {\n  if (cached.conn) return cached.conn;\n\n  if (!cached.promise) {\n    cached.promise = mongoose\n      .connect(MONGODB_URI, {\n        useNewUrlParser: true,\n        useUnifiedTopology: true,\n      })\n      .then((mongoose) => mongoose);\n  }\n\n  cached.conn = await cached.promise;\n  return cached.conn;\n}\n\nexport default dbConnect;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,YAAY;AAE5C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE,OAAO,OAAO,IAAI;IAEnC,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CACtB,OAAO,CAAC,aAAa;YACpB,iBAAiB;YACjB,oBAAoB;QACtB,GACC,IAAI,CAAC,CAAC,WAAa;IACxB;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///home/dell/Desktop/strip/stripe-intigration/src/app/%28backend%29/api/%28stripe-code%29/%28checkout%29/retrieve-payment-intent/route.js"],"sourcesContent":["import Stripe from \"stripe\";\nimport { NextResponse } from \"next/server\";\nimport PaymetProduct from \"@/app/server/models/PaymetProduct.js\";\nimport dbConnect from \"@/app/server/mongoConnection\";\n\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY);\n\nexport async function GET(req) {\n  try {\n    const { searchParams } = new URL(req.url);\n    const id = searchParams.get(\"id\");\n\n    if (!id) {\n      return NextResponse.json({ error: \"PaymentIntent ID is required\" });\n    }\n    const paymentIntent = await stripe.paymentIntents.retrieve(id);\n\n    if (!paymentIntent) {\n      return NextResponse.json({ error: \"PaymentIntent not found\" });\n    }\n    await dbConnect();\n\n    const newProduct = await PaymetProduct.create({\n      title: paymentIntent.description || \"No title\",\n      price: paymentIntent.amount / 100,\n      paymentIntentId: paymentIntent.id,\n    });\n    await newProduct.save();\n    return NextResponse.json({\n      message: \"Data of Payment\",\n      id: paymentIntent.id,\n      amount: paymentIntent.amount,\n      data: newProduct,\n      status: paymentIntent.status,\n    });\n  } catch (error) {\n    return NextResponse.json({ error: error.message });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEA,MAAM,SAAS,IAAI,wJAAA,CAAA,UAAM,CAAC,QAAQ,GAAG,CAAC,iBAAiB;AAEhD,eAAe,IAAI,GAAG;IAC3B,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;QACxC,MAAM,KAAK,aAAa,GAAG,CAAC;QAE5B,IAAI,CAAC,IAAI;YACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA+B;QACnE;QACA,MAAM,gBAAgB,MAAM,OAAO,cAAc,CAAC,QAAQ,CAAC;QAE3D,IAAI,CAAC,eAAe;YAClB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA0B;QAC9D;QACA,MAAM,CAAA,GAAA,yIAAA,CAAA,UAAS,AAAD;QAEd,MAAM,aAAa,MAAM,iJAAA,CAAA,UAAa,CAAC,MAAM,CAAC;YAC5C,OAAO,cAAc,WAAW,IAAI;YACpC,OAAO,cAAc,MAAM,GAAG;YAC9B,iBAAiB,cAAc,EAAE;QACnC;QACA,MAAM,WAAW,IAAI;QACrB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,IAAI,cAAc,EAAE;YACpB,QAAQ,cAAc,MAAM;YAC5B,MAAM;YACN,QAAQ,cAAc,MAAM;QAC9B;IACF,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC;IAClD;AACF"}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}