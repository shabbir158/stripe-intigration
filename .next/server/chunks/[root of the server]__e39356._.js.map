{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///home/dell/Desktop/strip/stripe-intigration/src/app/server/mongoConnection.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst MONGODB_URI = process.env.DATABASE_URL;\n\nif (!MONGODB_URI) {\n  throw new Error(\"Please define the DATABASE_URL environment variable.\");\n}\n\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function dbConnect() {\n  if (cached.conn) return cached.conn;\n\n  if (!cached.promise) {\n    cached.promise = mongoose\n      .connect(MONGODB_URI, {\n        useNewUrlParser: true,\n        useUnifiedTopology: true,\n      })\n      .then((mongoose) => mongoose);\n  }\n\n  cached.conn = await cached.promise;\n  return cached.conn;\n}\n\nexport default dbConnect;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,YAAY;AAE5C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE,OAAO,OAAO,IAAI;IAEnC,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CACtB,OAAO,CAAC,aAAa;YACpB,iBAAiB;YACjB,oBAAoB;QACtB,GACC,IAAI,CAAC,CAAC,WAAa;IACxB;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///home/dell/Desktop/strip/stripe-intigration/src/app/server/models/addProduct.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst AddProductSchema = new mongoose.Schema(\n  {\n    id: String,\n    title: String,\n    price: String,\n    description: String,\n  },\n  { timestamps: true }\n);\n\nexport default mongoose.models.addProduct ||\n  mongoose.model(\"addProduct\", AddProductSchema);\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,mBAAmB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAC1C;IACE,IAAI;IACJ,OAAO;IACP,OAAO;IACP,aAAa;AACf,GACA;IAAE,YAAY;AAAK;uCAGN,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,UAAU,IACvC,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,cAAc"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///home/dell/Desktop/strip/stripe-intigration/src/app/%28backend%29/api/%28product%29/show-product/route.js"],"sourcesContent":["import { NextResponse, NextRequest } from \"next/server\";\nimport dbConnect from \"@/app/server/mongoConnection\";\nimport addProduct from \"@/app/server/models/addProduct\";\n\nexport const GET = async (req) => {\n  try {\n    await addProduct();\n    const products = await addProduct.find();\n    if (!products) {\n      return NextResponse.json({\n        message: \"Products are not availabe \",\n        status: 402,\n      });\n    }\n    return NextResponse.json({\n      message: \"Products are available\",\n      status: 200,\n      data: products,\n    });\n  } catch (error) {\n    console.log(error);\n    return NextResponse.json({\n      message: \"Inavlid Server Error\",\n      status: 500,\n    });\n  }\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,MAAM,MAAM,OAAO;IACxB,IAAI;QACF,MAAM,CAAA,GAAA,8IAAA,CAAA,UAAU,AAAD;QACf,MAAM,WAAW,MAAM,8IAAA,CAAA,UAAU,CAAC,IAAI;QACtC,IAAI,CAAC,UAAU;YACb,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,QAAQ;YACV;QACF;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,QAAQ;YACR,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,QAAQ;QACV;IACF;AACF"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}