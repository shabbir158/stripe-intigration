{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///home/dell/Desktop/strip/stripe-intigration/src/app/%28backend%29/api/retrieve-payment-intent/route.js"],"sourcesContent":["import Stripe from \"stripe\";\nimport { NextResponse } from \"next/server\";\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY);\n\nexport async function GET(req) {\n  try {\n    const { searchParams } = new URL(req.url);\n    const id = searchParams.get(\"id\");\n    if (!id) {\n      return NextResponse.json({ error: \"PaymentIntent ID is required\" });\n    }\n    const paymentIntent = await stripe.paymentIntents.retrieve(id);\n\n    if (!paymentIntent) {\n      return NextResponse.json({ error: \"PaymentIntent not found\" });\n    }\n\n    return NextResponse.json({\n      message: \"Data of Payment\",\n      id: paymentIntent.id,\n      amount: paymentIntent.amount,\n      status: paymentIntent.status,\n    });\n  } catch (error) {\n    return NextResponse.json({ error: error.message });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACA,MAAM,SAAS,IAAI,wJAAA,CAAA,UAAM,CAAC,QAAQ,GAAG,CAAC,iBAAiB;AAEhD,eAAe,IAAI,GAAG;IAC3B,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;QACxC,MAAM,KAAK,aAAa,GAAG,CAAC;QAC5B,IAAI,CAAC,IAAI;YACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA+B;QACnE;QACA,MAAM,gBAAgB,MAAM,OAAO,cAAc,CAAC,QAAQ,CAAC;QAE3D,IAAI,CAAC,eAAe;YAClB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA0B;QAC9D;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,IAAI,cAAc,EAAE;YACpB,QAAQ,cAAc,MAAM;YAC5B,QAAQ,cAAc,MAAM;QAC9B;IACF,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC;IAClD;AACF"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}