{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/dell/Desktop/strip/stripe-intigration/src/app/server/prismaConnection.js"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\nconst prisma = new PrismaClient();\n(async function checkConnection() {\n  try {\n    await prisma.$connect();\n    console.log(\"Prisma connected to the database.\");\n  } catch (error) {\n    console.error(\"Failed to connect to the database:\");\n    process.exit(1);\n  }\n})();\nexport default prisma;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAC/B,CAAC,eAAe;IACd,IAAI;QACF,MAAM,OAAO,QAAQ;QACrB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC;QACd,QAAQ,IAAI,CAAC;IACf;AACF,CAAC;uCACc"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///home/dell/Desktop/strip/stripe-intigration/src/app/%28backend%29/api/create-payment-intent/route.js"],"sourcesContent":["import prisma from \"@/app/server/prismaConnection\";\nimport { Stripe } from \"stripe\";\n\nconst stripeSecretKey = process.env.STRIPE_SECRET_KEY;\n\nif (!stripeSecretKey) {\n  throw new Error(\"Stripe secret key is not defined.\");\n}\n\nconst stripe = new Stripe(stripeSecretKey, {\n  apiVersion: \"2024-04-10\",\n});\n\nexport const POST = async (req) => {\n  try {\n    const { amount } = await req.json();\n\n    const paymentIntent = await stripe.paymentIntents.create({\n      amount: amount,\n      currency: \"USD\",\n      automatic_payment_methods: { enabled: true },\n    });\n\n    return Response.json({\n      clientSecret: paymentIntent.client_secret,\n      message: \"Amount Succesfully sent \",\n    });\n  } catch (error) {\n    console.error(\"Internal Error:\", error);\n\n    return Response.json(\n      { error: `Internal Server Error: ${error}` },\n      { status: 500 }\n    );\n  }\n};\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,kBAAkB,QAAQ,GAAG,CAAC,iBAAiB;AAErD,IAAI,CAAC,iBAAiB;IACpB,MAAM,IAAI,MAAM;AAClB;AAEA,MAAM,SAAS,IAAI,wJAAA,CAAA,SAAM,CAAC,iBAAiB;IACzC,YAAY;AACd;AAEO,MAAM,OAAO,OAAO;IACzB,IAAI;QACF,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,IAAI;QAEjC,MAAM,gBAAgB,MAAM,OAAO,cAAc,CAAC,MAAM,CAAC;YACvD,QAAQ;YACR,UAAU;YACV,2BAA2B;gBAAE,SAAS;YAAK;QAC7C;QAEA,OAAO,SAAS,IAAI,CAAC;YACnB,cAAc,cAAc,aAAa;YACzC,SAAS;QACX;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QAEjC,OAAO,SAAS,IAAI,CAClB;YAAE,OAAO,CAAC,uBAAuB,EAAE,OAAO;QAAC,GAC3C;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}